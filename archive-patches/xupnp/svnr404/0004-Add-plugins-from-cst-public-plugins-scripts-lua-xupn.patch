From d5a00b517e6350c02f9622b2d383ebe3f45217d7 Mon Sep 17 00:00:00 2001
From: "M. Liebmann" <tuxcode.bbg@gmail.com>
Date: Tue, 3 Feb 2015 19:12:00 +0100
Subject: [PATCH 4/4] Add plugins from cst-public-plugins/scripts-lua/xupnpd

---
 src/plugins/xupnpd_18plus.lua     | 147 +++++++++++++++++++++++++++
 src/plugins/xupnpd_cczwei.lua     |  75 ++++++++++++++
 src/plugins/xupnpd_coolstream.lua | 203 +++++++++++++++++++++++++++-----------
 src/plugins/xupnpd_youtube.lua    |   8 +-
 4 files changed, 370 insertions(+), 63 deletions(-)
 create mode 100644 src/plugins/xupnpd_18plus.lua
 create mode 100644 src/plugins/xupnpd_cczwei.lua

diff --git a/src/plugins/xupnpd_18plus.lua b/src/plugins/xupnpd_18plus.lua
new file mode 100644
index 0000000..060e634
--- /dev/null
+++ b/src/plugins/xupnpd_18plus.lua
@@ -0,0 +1,147 @@
+-- ******************************
+-- Attention!!! Adult only      *
+-- 18+                          *
+-- ******************************
+
+cfg.user_age=18
+cfg.youporn_max_pages=5
+
+youporn_category=
+{
+    ['top_rated']='/top_rated/', ['most_viewed']='/most_viewed/', ['amateur']='/category/1/amateur/', ['anal']='/category/2/anal/',
+    ['asian']='/category/3/asian/', ['bbw']='/category/4/bbw/', ['big_butt']='/category/6/big-butt/', ['big_tits']='/category/7/big-tits/',
+    ['bisexual']='/category/5/bisexual/', ['blonde']='/category/51/blonde/', ['blowjob']='/category/9/blowjob/',
+    ['brunette']='/category/52/brunette/', ['coed']='/category/10/coed/', ['compilation']='/category/11/compilation/',
+    ['couples']='/category/12/couples/', ['creampie']='/category/13/creampie/', ['cumshots']='/category/37/cumshots/',
+    ['cunnilingus']='/category/15/cunnilingus/', ['dp']='/category/16/dp/', ['ebony']='/category/8/ebony/',
+    ['european']='/category/48/european/', ['facial']='/category/17/facial/', ['fantasy']='/category/42/fantasy/',
+    ['fetish']='/category/18/fetish/', ['fingering']='/category/62/fingering/', ['funny']='/category/19/funny/',
+    ['gay']='/category/20/gay/', ['german']='/category/58/german/', ['gonzo']='/category/50/gonzo/',
+    ['group_sex']='/category/21/group-sex/', ['hairy']='/category/46/hairy/', ['handjob']='/category/22/handjob/',
+    ['hentai']='/category/23/hentai/', ['instructional']='/category/24/instructional/', ['interracial']='/category/25/interracial/',
+    ['interview']='/category/41/interview/', ['kissing']='/category/40/kissing/', ['latina']='/category/49/latina/',
+    ['lesbian']='/category/26/lesbian/', ['milf']='/category/29/milf/', ['masturbate']='/category/55/masturbate/',
+    ['mature']='/category/28/mature/', ['pov']='/category/36/pov/', ['panties']='/category/56/panties/',
+    ['pantyhose']='/category/57/pantyhose/', ['public']='/category/30/public/', ['redhead']='/category/53/redhead/',
+    ['rimming']='/category/43/rimming/', ['romantic']='/category/61/romantic/', ['shaved']='/category/54/shaved/',
+    ['shemale']='/category/31/shemale/', ['solo_male']='/category/60/solo-male/', ['solo_girl']='/category/27/solo-girl/',
+    ['squirting']='/category/39/squirting/', ['strt_sex']='/category/47/strt-sex/', ['swallow']='/category/59/swallow/',
+    ['teen']='/category/32/teen/', ['threesome']='/category/38/threesome/', ['vintage']='/category/33/vintage/',
+    ['voyeur']='/category/34/voyeur/', ['webcam']='/category/35/webcam/', ['3d']='/category/63/3d/'
+}
+
+function youporn_updatefeed(feed,friendly_name)
+    local rc=false
+
+    local ff=youporn_category[feed]
+
+    if not ff then return false end
+
+    local feed_name='youporn_'..string.gsub(feed,'/','_')
+    local feed_m3u_path=cfg.feeds_path..feed_name..'.m3u'
+    local tmp_m3u_path=cfg.tmp_path..feed_name..'.m3u'
+    local feed_url='http://www.youporn.com'..ff..'?'
+
+    local dfd=io.open(tmp_m3u_path,'w+')
+
+    if dfd then
+        dfd:write('#EXTM3U name=\"',friendly_name or feed_name,'\" type=mp4 plugin=youporn\n')
+
+        local page=1
+
+	http.user_agent(cfg.user_agent..'\r\nCookie: age_verified=1')
+
+        while(page<=cfg.youporn_max_pages) do
+            local url=feed_url..'&page='..page
+
+            if cfg.debug>0 then print('YouPorn try url '..url) end
+
+            local feed_data=http.download(url)
+	    local skipto = feed_data.find(feed_data, "sidebarLists")
+	    if skipto and #feed_data > skipto then
+		feed_data = string.sub(feed_data,skipto,#feed_data)
+	    end
+	    local anythingtoparse = feed_data.find(feed_data,"<div class=")
+            if feed_data  and anythingtoparse then
+                local n=0
+		for entry in feed_data:gmatch("<div class=(.-)</div>") do
+		    urn,logo,name = string.match(entry,'.-<a href="(/watch/.-)">%s<img src="(.-)" alt="(.-)".class=.-')
+		    if urn then
+			local m=string.find(urn,'?',1,true)
+			if m then urn=urn:sub(1,m-1) end
+			    local f = string.find(logo, 'blankvideobox.png')
+			    if f then logo = "" end
+			    dfd:write('#EXTINF:0 logo=',logo,' ,',name,'\n','http://www.youporn.com',urn,'\n')
+			    n=n+1
+		    end
+		end
+
+                if n<1 then page=cfg.youporn_max_pages end
+
+                feed_data=nil
+            end
+
+            page=page+1
+        end
+
+        dfd:close()
+
+        if util.md5(tmp_m3u_path)~=util.md5(feed_m3u_path) then
+            if os.execute(string.format('mv %s %s',tmp_m3u_path,feed_m3u_path))==0 then
+                if cfg.debug>0 then print('YouPorn feed \''..feed_name..'\' updated') end
+                rc=true
+            end
+        else
+            util.unlink(tmp_m3u_path)
+        end
+    end
+
+    return rc
+end
+
+function youporn_sendurl(youporn_url,range)
+
+    http.user_agent(cfg.user_agent..'\r\nCookie: age_verified=1')
+
+    local url=nil
+
+    if plugin_sendurl_from_cache(youporn_url,range) then return end
+
+    local clip_page=plugin_download(youporn_url)
+    if clip_page then
+        url=string.match(clip_page,'<video id="player.html5" src="(http://.-)" x.webkit.airplay+')
+        clip_page=nil
+
+        if url then url=string.gsub(url,'&amp;','&') end
+
+    else
+        if cfg.debug>0 then print('Clip is not found') end
+    end
+
+    if url then
+        if cfg.debug>0 then print('Real URL: '..url) end
+
+        plugin_sendurl(youporn_url,url,range)
+    else
+        if cfg.debug>0 then print('Real URL is not found') end
+
+        plugin_sendfile('www/corrupted.mp4')
+    end
+end
+
+plugins['youporn']={}
+plugins.youporn.disabled=false
+plugins.youporn.name="YouPorn"
+plugins.youporn.sendurl=youporn_sendurl
+plugins.youporn.updatefeed=youporn_updatefeed
+
+function youporn_desc()
+    local t={}
+    for i,j in pairs(youporn_category) do
+        t[table.maxn(t)+1]=i
+    end
+    return table.concat(t,',')
+end
+
+plugins.youporn.desc=youporn_desc()
+if cfg.user_age<18 then plugins.youporn.disabled=true end
diff --git a/src/plugins/xupnpd_cczwei.lua b/src/plugins/xupnpd_cczwei.lua
new file mode 100644
index 0000000..24b57fd
--- /dev/null
+++ b/src/plugins/xupnpd_cczwei.lua
@@ -0,0 +1,75 @@
+-------- cczwei
+function cczwei_updatefeed(feed,friendly_name)
+	local url='http://www.cczwei.de/index.php?id=tvissuearchive'
+	local rc=false
+	local feed_data=http.download(url)
+	if feed_data then
+		local f1 =string.find(feed_data,'<b>TV')
+		local f2 =string.find(feed_data,'class="header">ALLE BEITRÄGE')
+		if f1 and f2 then
+			feed_data = string.sub(feed_data,f1,f2)
+		end
+		local tmp_m3u_filename = cfg.tmp_path..friendly_name..".m3u"
+		local feed_m3u_path= cfg.feeds_path..friendly_name..'.m3u'
+
+		local m3ufile = io.open(tmp_m3u_filename,"w")
+		m3ufile:write("#EXTM3U name=\""..friendly_name.."\" plugin=cczwei type=mp4\n")
+		for string in string.gmatch(feed_data, '(.-)<b>') do
+			if string then
+				local num,url,title = string.match(string, 'Folge.(%d+)</b>.*<a href="(index.php.*)#%w+">(.-)</a>') 
+				if num and url and title then
+--					if url then url=string.gsub(url,'&amp;','&') 
+--						url = "http://www.cczwei.de/" ..url
+--					end
+					title = string.gsub(title,'ä','ae')
+					title = string.gsub(title,'ö','oe')
+					title = string.gsub(title,'ü','ue')
+					title = string.gsub(title,'Ü','Ue')
+					title = string.gsub(title,'ß','ss')
+					title = string.gsub(title,'–',' ')
+					title = string.gsub(title,'²','2')
+					title = string.gsub(title,'®',' ')
+					title = string.gsub(title,'€','Euro')
+
+					fdi=string.find(feed_data,'<SPAN CLASS=.header.>',fdi)
+					if fdi then
+						d= string.match(feed_data, '(%d%d.%d%d.%d%d%d%d)',fdi)
+						fdi=fdi+22		  
+					end
+					if d == nil then
+						d = ""
+					end
+					num = string.format("%03d", num)
+					m3ufile:write("#EXTINF:0,".."Folge "..num.." -- "..d ..": "..title.."\n")
+					m3ufile:write("http://cczwei.mirror.speedpartner.de/cc2tv/CC2_"..num..".mp4\n")
+				end
+			end
+		end
+		m3ufile:close()
+		feed_data=nil
+		if util.md5(tmp_m3u_filename)~=util.md5(feed_m3u_path) then
+			 if os.execute(string.format('mv %s %s',tmp_m3u_filename,feed_m3u_path))==0 then
+				if cfg.debug>0 then 
+					print('CCZwei feed \''..friendly_name..'\' updated') 
+				end
+				rc=true
+			end
+		else
+ 			util.unlink(tmp_m3u_filename)
+		end
+	end
+	return rc
+end
+
+function cczwei_sendurl(cczwei_url,range)
+	plugin_sendurl(cczwei_url,cczwei_url,range)
+end
+
+
+plugins['cczwei']={}
+plugins.cczwei.name="CCZwei"
+plugins.cczwei.sendurl=cczwei_sendurl
+plugins.cczwei.updatefeed=cczwei_updatefeed
+plugins.cczwei.getvideourl=cczwei_get_video_url
+
+cczwei_updatefeed('cczwei', 'ComputerClub2')
diff --git a/src/plugins/xupnpd_coolstream.lua b/src/plugins/xupnpd_coolstream.lua
index fce473e..7f985a8 100644
--- a/src/plugins/xupnpd_coolstream.lua
+++ b/src/plugins/xupnpd_coolstream.lua
@@ -4,7 +4,7 @@
 -- Copyright (C) 2013 CoolStream International Ltd
 
 -- flag to test as plain script, without xupnpd - cfg not defined in this case
-local cst_test =  false
+local cst_test = false
 
 if not cfg then
 cfg={}
@@ -14,16 +14,82 @@ cfg.debug=1
 cst_test = true
 end
 
+function trim(s)
+	return (s:gsub("^%s*(.-)%s*$", "%1"))
+end
+
 function cst_debug(level, msg)
 	if cfg.debug>level then
 		print(msg)
 	end
 end
 
-function cst_get_bouquets(file)
+function isFile(name)
+	if type(name)~="string" then return false end
+	local f = io.open(name)
+	if f then
+		f:close()
+		return true
+	end
+	return false
+end
+
+function cst_get_logo_hdd_dir()
+	local d = nil
+	local f = io.open("/var/tuxbox/config/neutrino.conf", "r")
+	if f then
+		for line in f:lines() do
+			local _d = line:match("logo_hdd_dir=(.*)")
+			if _d then
+				d = _d
+				goto continue
+			end
+		end
+		::continue::
+		f:close()
+	end
+	if d then
+		cst_debug(0, "cst_get_logo_hdd_dir: logo_hdd_dir="..d)
+	end
+	return d
+end
+
+local logo_hdd_dir = cst_get_logo_hdd_dir()
+local logo_flash_dir = "/share/tuxbox/neutrino/icons/logo"
+local logo_flash_dir_var = "/var/tuxbox/icons/logo"
+
+function cst_get_logo(id, name)
+	Path = {logo_hdd_dir, logo_flash_dir_var, logo_flash_dir}
+	local x=5
+	if string.sub(id ,5,5) == '0' then
+		x = x + 1
+		if string.sub(id ,6,6) == '0' then
+			x = x + 1
+			if string.sub(id ,7,7) == '0' then
+				x = x + 1
+			end
+		end
+	end
+	id = string.sub(id ,x,16)
+
+	chan = {name,id}
+	for v, varPath in pairs(Path) do
+		for v2, varChan in pairs(chan) do
+			file = varPath .."/" .. varChan
+			if isFile(file .. ".png") then
+				return file .. ".png"
+			end
+			if isFile(file .. ".jpg") then
+				return file .. ".jpg"
+			end
+		end
+	end
+	return nil
+end
+
+function cst_get_bouquets(s)
 	local btable={}
-	repeat
-		local string=file:read()
+	for string in string.gmatch(s, "(.-)%c") do
 		if string then
 			cst_debug(1, "########## bouquet="..string)
 			local num = string.match(string, "%d+");
@@ -35,14 +101,13 @@ function cst_get_bouquets(file)
 			end
 			--break; -- one bouquet
 		end
-	until not string
+	end
 	return btable
 end
 
-function cst_get_channels(file)
+function cst_get_channels(s)
 	local ctable={}
-	repeat
-		local string=file:read()
+	for string in string.gmatch(s, "(.-)%c") do
 		idx = 1;
 		if string then
 			cst_debug(1, "########## channel="..string)
@@ -60,55 +125,70 @@ function cst_get_channels(file)
 				end
 			end
 		end
- 	until not string	
+	end
 	return ctable
 end
 
--- all bouquets
--- local burl = "getbouquets"
--- only favorites
-local burl = "getbouquets?fav=true"
-
--- without epg
--- local curl = "getbouquet?bouquet="
--- with epg
-local curl = "getbouquet?epg=true&bouquet="
+function cst_read_url(url)
+	local string = ""
+	cst_debug(0, "url: "..url)
+	if cst_test then
+		local wget = "wget -q -O- "
+		local turl = wget.."\""..url.."\""
+		local file = io.popen(turl)
+		repeat
+			local st = file:read()
+			if st then
+				string = string..st.."\n";
+			end
+		until not st
+		file:close()
+	else
+		string = http.download(url)
+	end
+	cst_debug(0, "url read: "..string.len(string))
+	return string
+end
 
-function cst_updatefeed(feed,friendly_name)
+function cst_save_bouqutes(feed, friendly_name, mode, sysip)
 	local rc=false
 	local feedspath = cfg.feeds_path
-	if not friendly_name then
-		friendly_name = feed
-	end
-	local wget = "wget -q -O- "
+
 	local cst_url = 'http://'..feed..'/control/'
+	local burl = "getbouquets?fav=true&mode="..mode
+	local curl = "getbouquet?epg=true&mode="..mode.."&bouquet="
 
-	cst_debug(0, wget..cst_url..burl)
-	local bouquetsfile = io.popen(wget..cst_url..burl)
-	local bouquets = cst_get_bouquets(bouquetsfile)
-	bouquetsfile:close()
+	local bouquets_data = cst_read_url(cst_url..burl)
+	local bouquets = cst_get_bouquets(bouquets_data)
 
 	if not bouquets then
 		return rc
 	end
+
 	local bindex
 	local bouquett = {}
 	for bindex,bouquett in pairs(bouquets) do
 		local cindex
 		local channelt = {}
-		cst_debug(0,wget.."\""..cst_url..curl..bindex.."\"")
-		local xmlbouquetfile = io.popen(wget.."\""..cst_url..curl..bindex.."\"")
-		local bouquet = cst_get_channels(xmlbouquetfile)
-	        xmlbouquetfile:close()
+		local xmlbouquet_data = cst_read_url(cst_url..curl..bindex)
+		local bouquet = cst_get_channels(xmlbouquet_data)
 		if bouquet then
-	    		local m3ufilename = cfg.tmp_path.."cst_"..friendly_name.."_bouquet_"..bindex..".m3u"
+			local bnum = string.format("%03d", bindex)
+			local m3ufilename = cfg.tmp_path.."cst_"..friendly_name.."_"..mode.."_bouquet_"..bnum..".m3u"
 			cst_debug(0, m3ufilename)
-	    		local m3ufile = io.open(m3ufilename,"w")
-			m3ufile:write("#EXTM3U name=\""..bouquett.." ("..friendly_name..")\" plugin=coolstream type=ts\n")
+			local m3ufile = io.open(m3ufilename,"w")
+			m3ufile:write("#EXTM3U name=\""..friendly_name..": "..mode.." - "..trim(bouquett).."\" plugin=coolstream type=ts\n")
 			for cindex,channelt in pairs(bouquet) do
 				local id = channelt[1];
 				local name = channelt[2];
-				m3ufile:write("#EXTINF:0,"..name.."\n")
+
+				local logo = cst_get_logo(id, name)
+				if logo == nil then
+					m3ufile:write("#EXTINF:0,"..name.."\n")
+				else
+					m3ufile:write("#EXTINF:0 logo="..sysip..logo .." ,"..name.."\n")
+				end
+
 				-- m3ufile:write(cst_url.."zapto?"..id.."\n")
 				m3ufile:write("http://"..feed..":31339/id="..id.."\n")
 			end
@@ -120,14 +200,25 @@ function cst_updatefeed(feed,friendly_name)
 	return rc
 end
 
-function cst_read_url(url)
-	local wget = "wget -q -O- "
-	local turl = wget..url
-	cst_debug(0, turl)
-	local file = io.popen(turl)
-	local string = file:read()
-	file:close()
-	return string
+function cst_updatefeed(feed,friendly_name)
+	local rc=false
+	if not friendly_name then
+		friendly_name = feed
+	end
+
+	local sysip = ""
+	if not cst_test then
+		sysip = www_location
+		sysip = sysip:match('(http://%d*.%d*.%d*.%d*):*.')
+	end
+	if cst_save_bouqutes(feed, friendly_name, "TV", sysip) then
+		rc = true
+	end
+	if cst_save_bouqutes(feed, friendly_name, "RADIO", sysip) then
+		rc = true
+	end
+
+	return rc
 end
 
 function cst_zapto(urlbase,id)
@@ -139,20 +230,20 @@ function cst_sendurl(cst_url,range)
 	local i,j,baseurl = string.find(cst_url,"(.+):.+")
 	cst_debug(0, "cst_sendurl: url="..cst_url.." baseurl="..baseurl)
 
-	i,j,id = string.find(cst_url,".*id=(.+)")
-	local surl = baseurl.."/control/standby"
-	local standby = cst_read_url(surl)
+--	i,j,id = string.find(cst_url,".*id=(.+)")
+--	local surl = baseurl.."/control/standby"
+--	local standby = cst_read_url(surl)
 
-	if standby then
-		cst_debug(0, "standby="..standby)
-
-		-- wakeup from standby
-		if string.find(standby,"on") then
-			cst_read_url(surl.."?off")
-		end
-	end
-	-- zap to channel
-	cst_zapto(baseurl,id)
+--	if standby then
+--		cst_debug(0, "standby="..standby)
+--
+--		-- wakeup from standby
+--		if string.find(standby,"on") then
+--			cst_read_url(surl.."?off&cec=off")
+--		end
+--	end
+--	-- zap to channel
+--	cst_zapto(baseurl,id)
 
 	if not cst_test then
 		plugin_sendurl(cst_url,cst_url,range)
diff --git a/src/plugins/xupnpd_youtube.lua b/src/plugins/xupnpd_youtube.lua
index f2a4373..6686b44 100644
--- a/src/plugins/xupnpd_youtube.lua
+++ b/src/plugins/xupnpd_youtube.lua
@@ -209,8 +209,6 @@ function youtube_get_video_url(youtube_url)
 -- itag 133: 240p
 -- itag 160: 144
 
---        local player_url=nil if s.assets then player_url=s.assets.js end if player_url and string.sub(player_url,1,2)=='//' then player_url='http:'..player_url end
-
         if s.args then stream_map=s.args.url_encoded_fmt_stream_map end
 
         local fmt=string.match(youtube_url,'&fmt=(%w+)$')
@@ -230,11 +228,7 @@ function youtube_get_video_url(youtube_url)
                     end
                 end
 
-                local sig=item['sig'] or item['s']
-                local u=item['url']
-                if sig then u=u..'&signature='..sig end
-                --print(item['itag'],u)
-                urls[tonumber(item['itag'])]=u
+                urls[tonumber(item['itag'])]=item['url'] ..'&signature='..(item['sig'] or item['s'] or '')
 
                 --print('\n')
             end
-- 
2.2.2

